<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.tedu.store.mapper.UserMapper">
	
	<resultMap type="cn.tedu.store.entity.User" id="UserEntityMap">
		<id column="uid" property="uid"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="salt" property="salt"/>
		<result column="gender" property="gender"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="avatar" property="avatar"/>
		<result column="is_delete" property="isDelete"/>
		<result column="created_user" property="createdUser"/>
		<result column="created_time" property="createdTime"/>
		<result column="modifide_user" property="modifideUser"/>
		<result column="modifide_time" property="modifideTime"/>
	</resultMap>
	
	<!--插入用户数据  -->
	<!-- Integer save(User user) -->
	<insert id="save" useGeneratedKeys="true" keyProperty="uid">
		insert into t_user(
			username,password,salt,gender,phone,
			email,avatar,is_delete,
			created_user,created_time,
			modifide_user,modifide_time 
		) values (
			#{username},#{password},#{salt},#{gender},#{phone},
			#{email},#{avatar},#{isDelete},
			#{createdUser},#{createdTime},
			#{modifideUser},#{modifideTime} 
		)
	</insert>
	
	<!-- 修改密码 -->
	<!-- Integer updatePassword(@Param("uid")Integer uid,
			@Param("password")String password,
			@Param("modifiedUser")String modifiedUser,
			@Param("modifiedTime")Date modifiedTime); -->
	<update id="updatePassword">
		update 
			t_user
		set
			 password =#{password},modifide_user=#{modifiedUser},modifide_time=#{modifiedTime}
		where 
			uid=#{uid}
		
	</update>
	
	<!-- 更新个人资料 -->
	<!--Integer updateInfo(User user);  -->
	<update id="updateInfo">
		update
			t_user
		set
			gender=#{gender},
			phone=#{phone},
			email=#{email},
			modifide_user=#{modifideUser},
			modifide_time=#{modifideTime}
		where
			uid=#{uid}
	</update>
	
	<!-- 更新用户头像 -->
	<!-- Integer updateAvatar(@Param("uid")Integer uid,@Param("avatar")String avatar,
			@Param("modifideUser")String modifideUser,@Param("modifideTime")Date modifideTime) -->
			
	<update id="updateAvatar">
		update
			t_user
		set
			avatar=#{avatar},
			modifide_user=#{modifideUser},
			modifide_time =#{modifideTime}
		where 
			uid=#{uid}
	</update>
	<!-- 根据用户的id查询用户数据 -->
	<!-- User findByUid(Integer uid); -->
	<select id="findByUid" resultMap="UserEntityMap">
		select
			*
		from
			t_user
		where
			uid=#{uid}
	</select>
	
	<!-- 根据用户名查询用户数据 -->
	<!-- User findByUsername(String username) -->
	<select id="findByUsername" resultMap="UserEntityMap">
		select 
			* 
		from 
			t_user 
		where 
			username=#{username}
	</select>
	
</mapper>



